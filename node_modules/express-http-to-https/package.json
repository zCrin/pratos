{
  "_args": [
    [
      {
        "raw": "express-http-to-https",
        "scope": null,
        "escapedName": "express-http-to-https",
        "name": "express-http-to-https",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/var/www/pratos"
    ]
  ],
  "_from": "express-http-to-https@latest",
  "_id": "express-http-to-https@1.1.3",
  "_inCache": true,
  "_location": "/express-http-to-https",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/express-http-to-https-1.1.3.tgz_1507397000522_0.718992113834247"
  },
  "_npmUser": {
    "name": "segfaultx64",
    "email": "maxwell.a.walker@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {
    "array-flatten": "1.1.1",
    "content-disposition": "0.5.2",
    "cookie": "0.3.1",
    "cookie-signature": "1.0.6",
    "destroy": "1.0.4",
    "encodeurl": "1.0.1",
    "escape-html": "1.0.3",
    "inherits": "2.0.3",
    "media-typer": "0.3.0",
    "merge-descriptors": "1.0.1",
    "methods": "1.1.2",
    "negotiator": "0.6.1",
    "on-finished": "2.3.0",
    "path-to-regexp": "0.1.7",
    "range-parser": "1.2.0",
    "statuses": "1.3.1",
    "unpipe": "1.0.0"
  },
  "_requested": {
    "raw": "express-http-to-https",
    "scope": null,
    "escapedName": "express-http-to-https",
    "name": "express-http-to-https",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/express-http-to-https/-/express-http-to-https-1.1.3.tgz",
  "_shasum": "9fc4c94c621d085e1f628ffe1408c0c9027032e4",
  "_shrinkwrap": null,
  "_spec": "express-http-to-https",
  "_where": "/var/www/pratos",
  "author": {
    "name": "Max Walker",
    "url": "max@maxwalker.me"
  },
  "bugs": {
    "url": "https://github.com/SegFaultx64/express-http-to-https/issues"
  },
  "contributors": [
    {
      "name": "Aleksander Szmigiel",
      "email": "kontakt@some-say.com",
      "url": "https://some-say.com"
    }
  ],
  "dependencies": {
    "express": "^4.15.3"
  },
  "description": "express-http-to-https is a node.js package for providing an Express middleware that redirects the client to HTTPS if they attempt to connect over HTTP.",
  "devDependencies": {
    "@types/express": "^4.0.36",
    "standard": "^10.0.2",
    "supertest": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "9fc4c94c621d085e1f628ffe1408c0c9027032e4",
    "tarball": "https://registry.npmjs.org/express-http-to-https/-/express-http-to-https-1.1.3.tgz"
  },
  "gitHead": "e44a018ff44fd01e905b6c6ce94c7555676addf6",
  "homepage": "https://github.com/SegFaultx64/express-http-to-https#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "segfaultx64",
      "email": "maxwell.a.walker@gmail.com"
    }
  ],
  "name": "express-http-to-https",
  "optionalDependencies": {},
  "readme": "# `express-http-to-https`\n\nexpress-http-to-https is a node.js package for providing an Express middleware that redirects the client to HTTPS if they attempt to connect over HTTP.\n\n## Installation\n`$ npm install --save express-http-to-https`\n\n\n## Usage\n\n`app.use(redirectToHTTPS(ignoreHosts, ignoreRoutes);`\n\n\n### Configuration Options\n\n* __ignoreHosts__: An array of strings of the hostnames on which to not enable the redirect. _note:_ you must include the port here, for example `[/localhost:8080/]`.\n* __ignoreRoutes__: An array of strings of the routes on which not to enable the redirect.\n\n\n### Example\n\n````js\nvar express = require('express');\nvar app = express();\n\nvar redirectToHTTPS = require('express-http-to-https').redirectToHTTPS\n\n// Don't redirect if the hostname is `localhost:port` or the route is `/insecure`\napp.use(redirectToHTTPS([/localhost:(\\d{4})/], [/\\/insecure/]));\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\napp.get('/insecure', function (req, res) {\n  res.send('Dangerous!');\n});\n\napp.listen(3000, function () {\n  console.log('Example app listening on port 3000!');\n});\n\napp.listen(8080, function () {\n  console.log('Example app listening on port 8080 insecurely!');\n});\n````\n\n[![JavaScript Style Guide](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\n## License\nMIT License\n\n## Author\nMax Walker (max@maxwalker.me)\n\n## Contributors\nAleksander Szmigiel\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SegFaultx64/express-http-to-https.git"
  },
  "scripts": {
    "test": "node ./test/index.test.js"
  },
  "version": "1.1.3"
}

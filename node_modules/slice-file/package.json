{
  "_args": [
    [
      {
        "raw": "slice-file@^1.0.0",
        "scope": null,
        "escapedName": "slice-file",
        "name": "slice-file",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/var/www/pratos/node_modules/last-line"
    ]
  ],
  "_from": "slice-file@>=1.0.0 <2.0.0",
  "_id": "slice-file@1.0.0",
  "_inCache": true,
  "_location": "/slice-file",
  "_nodeVersion": "1.6.3",
  "_npmUser": {
    "name": "substack",
    "email": "substack@gmail.com"
  },
  "_npmVersion": "2.7.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "slice-file@^1.0.0",
    "scope": null,
    "escapedName": "slice-file",
    "name": "slice-file",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/last-line"
  ],
  "_resolved": "https://registry.npmjs.org/slice-file/-/slice-file-1.0.0.tgz",
  "_shasum": "8b6c79d0a50c3fc3c1159957478426443a9000b8",
  "_shrinkwrap": null,
  "_spec": "slice-file@^1.0.0",
  "_where": "/var/www/pratos/node_modules/last-line",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/slice-file/issues"
  },
  "dependencies": {
    "inherits": "~1.0.0",
    "split2": "^0.2.1",
    "through2": "^0.6.5"
  },
  "description": "stream file slices by line number indexes",
  "devDependencies": {
    "tap": "^0.7.1"
  },
  "directories": {},
  "dist": {
    "shasum": "8b6c79d0a50c3fc3c1159957478426443a9000b8",
    "tarball": "https://registry.npmjs.org/slice-file/-/slice-file-1.0.0.tgz"
  },
  "gitHead": "7bd34eae2b9e09d973075381a4959a1009ffa802",
  "homepage": "https://github.com/substack/slice-file",
  "keywords": [
    "slice",
    "file",
    "tail",
    "head",
    "line",
    "number",
    "index",
    "fs"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    }
  ],
  "name": "slice-file",
  "optionalDependencies": {},
  "readme": "# slice-file\n\nstream file slices by line number indexes\n\n[![build status](https://secure.travis-ci.org/substack/slice-file.png)](http://travis-ci.org/substack/slice-file)\n\n# example\n\n## positive slice\n\n``` js\nvar sf = require('slice-file');\nvar words = sf('/usr/share/dict/words');\nwords.slice(22398,22408).pipe(process.stdout);\n```\n\n```\nbeep\nbeep's\nbeeped\nbeeper\nbeeper's\nbeepers\nbeeping\nbeeps\nbeer\nbeer's\n```\n\n## tail\n\n``` js\nvar sf = require('slice-file');\nvar xs = sf('/usr/share/dict/words');\nxs.slice(-10).pipe(process.stdout);\n```\n\n```\nélan's\némigré\némigré's\némigrés\népée\népée's\népées\nétude\nétude's\nétudes\n```\n\n# follow\n\nLike `tail -f`, slice-file can stream updates after the initial slice.\n\n```\nvar sf = require('slice-file');\nvar xs = sf('/var/mail/' + process.env.USER);\nxs.follow(-10).pipe(process.stdout);\n```\n\nat first the previous 10 lines will render:\n\n```\n$ node example/mail.js \n    id A2181740063; Fri, 12 Apr 2013 03:08:30 -0700 (PDT)\nSubject: beep boop\nTo: <substack@beep>\nX-Mailer: mail (GNU Mailutils 2.2)\nMessage-Id: <20130412100830.A2181740063@beep>\nDate: Fri, 12 Apr 2013 03:08:30 -0700 (PDT)\nFrom: substack@beep\n\noh hello\n\n\n```\n\nthen if a message is sent:\n\n```\n$ echo ahoy thar | mail -s 'oy' substack\n```\n\nwe see more data from the file:\n\n```\nFrom substack@beep  Fri Apr 12 03:09:13 2013\nReturn-Path: <substack@beep>\nX-Original-To: substack@beep\nDelivered-To: substack@beep\nReceived: by beep (Postfix, from userid 1000)\n    id 5E0C7740063; Fri, 12 Apr 2013 03:09:13 -0700 (PDT)\nSubject: oy\nTo: <substack@beep>\nX-Mailer: mail (GNU Mailutils 2.2)\nMessage-Id: <20130412100913.5E0C7740063@beep>\nDate: Fri, 12 Apr 2013 03:09:13 -0700 (PDT)\nFrom: substack@beep\n\nahoy thar\n\n```\n\n# reverse\n\nYou can also slice in reverse order, which is more efficient for\nnegative-indexed slices because the lines don't need to be buffered:\n\n``` js\nvar sf = require('slice-file');\nvar xs = sf('/usr/share/dict/words');\nxs.sliceReverse(-10).pipe(process.stdout);\n```\n\n```\névénements\névénement\névolués\névolué\nétuis\nétui's\nétui\nétudes\nétude's\nétude\n```\n\n# methods\n\n``` js\nvar sf = require('slice-file')\n```\n\n## var xs = sf(filename, opts={})\n\nCreate a slice-file instance `xs` from a `filename` and some options `opts`.\n\nThese `opts` are passed to `fs.open()`:\n\n* `opts.flags` - string flags to open the file with, default `\"r\"`\n* `opts.mode` - mask to open the file with, default `0666`\n\nIf you already have a file descriptor open you can pass `opts.fd` to skip\ncalling `fs.open()`.\n\nUse `opts.bufsize` to set how much data to read in each chunk. Default 4096.\n\n## var stream = xs.slice(i, j, cb)\n\nReturn a readable stream that emits each line between line numbers `[i,j)`\nexactly like `Array.prototype.slice()`. Each line data buffer includes a\ntrailing `\"\\n\"` except for the last line if there is no trailing newline before\nthe EOF.\n\nJust like `Array.prototype.slice()`, `i` and `j` may be negative.\n\nIf `cb(err, lines)` is given, the lines will be buffered into `lines`.\n\n## var stream = xs.sliceReverse(i, j, cb)\n\nReturn a readable stream that emits each line between line numbers `[i,j)`\njust like `.slice()` but in reverse order. This is more efficient for\nnegative-indexed slices because the lines don't need to be buffered.\n\nIf `cb(err, lines)` is given, the lines will be buffered into `lines`.\n\n## var stream = xs.follow(i, j)\n\nReturn a readable stream of lines like `xs.slice()`, but instead of ending when\nthe end of the file is reached, watch the file and stream new lines appended to\nthe end of the file.\n\nThis feature takes its name from `tail -f`.\n\n## xs.close()\n\nClose the underlying file descriptor, stop any streams, and stop any file\nwatchers.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n\n```\nnpm install slice-file\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/slice-file.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "1.0.0"
}

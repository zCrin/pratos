var fs = require('fs');
var pathTo = __dirname.replace('/node_modules/pratos_conditions_class/lib', '/node_modules/pratos_conditions_class');
module.exports = getNewBlocks;
function getNewBlocks(type, RecipeBlockList, answer, callback) {
    if (type == "xml") {
        var x = {
            "<category name=\"Homebridge\" colour=\"#6da55b\">": "",
			"<category name=\"Pratos\" colour=\"#5ba5a5\">":"",
			"<category name=\"Autres\" colour=\"#a55b80\">":"",
			"<category name=\"Object (JS)\">":""
			
        };
        fs.readFile(pathTo + '/assets/blocksCategoryHomebridge.xml', 'utf8', function (err, result) {

            x["<category name=\"Homebridge\" colour=\"#6da55b\">"] = result;
           isReady();
        });
		fs.readFile(pathTo + '/assets/blocksCategoryObject.xml', 'utf8', function (err, result) {

            x["<category name=\"Object (JS)\">"] = result;
           isReady();
        });
		fs.readFile(pathTo + '/assets/blocksCategoryOthers.xml', 'utf8', function (err, result) {

            x["<category name=\"Autres\" colour=\"#a55b80\">"] = result;
           isReady();
        });
		fs.readFile(pathTo + '/assets/blocksCategoryPratos.xml', 'utf8', function (err, result) {

            x["<category name=\"Pratos\" colour=\"#5ba5a5\">"] = result;
           isReady();
        });

    } else {
        start();
    }
	var nbLoaded = 0;
function isReady(){
	nbLoaded++;
	if(nbLoaded == 4){
		start();
	}
	
}
    function start() {
        var pluginsName = Object.keys(RecipeBlockList);

        var pluginsSize = pluginsName.length;
        if (pluginsSize == 0 && type != "xml") {

            callback(answer);

        }
        for (var u = 0; u < pluginsSize; u++) {
            if (type == "js") {
                answer += require(RecipeBlockList[pluginsName[u]]).jsBlockDef;
            }
            if (type == "xml") {
                x = require(RecipeBlockList[pluginsName[u]]).jsBlockXml(x);
            }
            if (type == "jsExec") {
                answer += require(RecipeBlockList[pluginsName[u]]).jsBlockCode;
            }
            if (u == (pluginsSize - 1) && type != "xml") {

                callback(answer);
            }
        }
        if (type == "xml") {

            var categoryName = Object.keys(x);
            var categorySize = categoryName.length;

            for (var u = 0; u < categorySize; u++) {
                answer += categoryName[u] + x[categoryName[u]] + "</category>";
                if (u == categorySize - 1) {

                    return callback(answer + "</xml>")
                }
            }

        } else {

            return callback(answer)
        }
    }
}

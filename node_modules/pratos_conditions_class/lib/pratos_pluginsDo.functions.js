const path = __dirname.replace('/node_modules/pratos_conditions_class/lib', ''); 
var cmd=require('node-cmd');
var config = {
    type: 'tab',
    size: 1
  }
var fs = require('fs');
var jsonFormat = require("json-format");
module.exports= pratos_pluginsDo;
function pratos_pluginsDo(name,action, globalVariable,callback){
	if(action == 'remove'){
		truelist_plugins(function(settings){
			settings.plugins[name] = 0;
			togglePlugins(settings,function(){
					cmd.get('cd /var/www/pratos/ && npm remove ' + name , function(){
						callback();
					});
			});
		});
	}else{
		truelist_plugins(function(settings){
			settings.plugins[name] = (action == 'activate')?1:0;
			togglePlugins(settings,function(){
				callback();
			});
		});
	}
} 
function truelist_plugins(callback){
	const testFolder = path + '/node_modules/';
	var res = '{"plugins":{';
	fs.readFile(path + "/conf/settings.json", 'utf8', function(err, data){
		var txt = JSON.parse(data);
		var pluginsName = txt.plugins;
		fs.readdir(testFolder, (error, files) => {
  			files.forEach(file => {
				if((/pratos_(.+)_plugin/).test(file)){
					res += '"' + file + '":';
					if(pluginsName.indexOf(file.replace('_plugin','')) > -1){
						res += '1,';
					}
					else{
						res += '0,';
					}
				}
			});
			if(res != '{"plugins":{'){
				res = JSON.parse(res.slice(0, -1)+ '}}');
			}
			else{
				res = '{"plugins":{}}';
			}
			return callback(res);
		});
	});
}
function togglePlugins(pluginsList,callback){
	var pluginsName = Object.keys(pluginsList.plugins),
	nPlugins = pluginsName.length;
	fs.readFile(path + "/conf/settings.json", 'utf8', function(err, settingsFile){
		var settingsFile = JSON.parse(settingsFile);
		settingsFile.plugins = [];
		for(var e =0; e < nPlugins; e++){
			if(pluginsList.plugins[pluginsName[e]] == 1){
				settingsFile.plugins.push(pluginsName[e].replace('_plugin',''));
			}
		}
		fs.writeFile(path + "/conf/settings.json", jsonFormat(settingsFile,config));
	});
	return callback();
}
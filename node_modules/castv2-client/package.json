{
  "_args": [
    [
      {
        "raw": "castv2-client@^1.1.2",
        "scope": null,
        "escapedName": "castv2-client",
        "name": "castv2-client",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "/var/www/pratos/node_modules/google-home-notifier"
    ]
  ],
  "_from": "castv2-client@>=1.1.2 <2.0.0",
  "_id": "castv2-client@1.2.0",
  "_inCache": true,
  "_location": "/castv2-client",
  "_nodeVersion": "4.2.4",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/castv2-client-1.2.0.tgz_1483129880591_0.3564770014490932"
  },
  "_npmUser": {
    "name": "thibauts",
    "email": "thibaut.seguy@gmail.com"
  },
  "_npmVersion": "2.14.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "castv2-client@^1.1.2",
    "scope": null,
    "escapedName": "castv2-client",
    "name": "castv2-client",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/google-home-notifier"
  ],
  "_resolved": "https://registry.npmjs.org/castv2-client/-/castv2-client-1.2.0.tgz",
  "_shasum": "a9193b1a5448b8cb9a0415bd021c8811ed7b0544",
  "_shrinkwrap": null,
  "_spec": "castv2-client@^1.1.2",
  "_where": "/var/www/pratos/node_modules/google-home-notifier",
  "author": {
    "name": "thibauts"
  },
  "bugs": {
    "url": "https://github.com/thibauts/node-castv2-client/issues"
  },
  "dependencies": {
    "castv2": "~0.1.4",
    "debug": "^2.2.0"
  },
  "description": "A Chromecast client based on the new (CASTV2) protocol",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "a9193b1a5448b8cb9a0415bd021c8811ed7b0544",
    "tarball": "https://registry.npmjs.org/castv2-client/-/castv2-client-1.2.0.tgz"
  },
  "gitHead": "cc712dac6a331615654c8193bfbd868563167d57",
  "homepage": "https://github.com/thibauts/node-castv2-client#readme",
  "keywords": [
    "chromecast",
    "castv2"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "thibauts",
      "email": "thibaut.seguy@gmail.com"
    }
  ],
  "name": "castv2-client",
  "optionalDependencies": {},
  "readme": "castv2-client\r\n=============\r\n### A Chromecast client based on the new (CASTV2) protocol\r\n\r\nThis module implements a Chromecast client over the new (CASTV2) protocol. A sender app for the `DefaultMediaReceiver` application is provided, as well as an `Application` base class and implementations of the basic protocols (see the `controllers` directory) that should make implementing custom senders a breeze.\r\n\r\nThis implementation tries to stay close and true to the protocol. For details about protocol internals please see [https://github.com/thibauts/node-castv2](https://github.com/thibauts/node-castv2#protocol-description). \r\n\r\nFor advanced use, like using [subtitles](https://github.com/thibauts/node-castv2-client/wiki/How-to-use-subtitles-with-the-DefaultMediaReceiver-app) with the DefaultMediaReceiver check the [wiki](https://github.com/thibauts/node-castv2-client/wiki).\r\n\r\nInstallation\r\n------------\r\n\r\n``` bash\r\n$ npm install castv2-client\r\n```\r\n\r\nOn windows, to avoid native modules dependencies, use\r\n\r\n``` bash\r\n$ npm install castv2-client --no-optional\r\n```\r\n\r\nExamples\r\n--------\r\n\r\nLaunching a stream on the device :\r\n\r\n``` javascript\r\nvar Client                = require('castv2-client').Client;\r\nvar DefaultMediaReceiver  = require('castv2-client').DefaultMediaReceiver;\r\nvar mdns                  = require('mdns');\r\n\r\nvar browser = mdns.createBrowser(mdns.tcp('googlecast'));\r\n\r\nbrowser.on('serviceUp', function(service) {\r\n  console.log('found device \"%s\" at %s:%d', service.name, service.addresses[0], service.port);\r\n  ondeviceup(service.addresses[0]);\r\n  browser.stop();\r\n});\r\n\r\nbrowser.start();\r\n\r\nfunction ondeviceup(host) {\r\n\r\n  var client = new Client();\r\n\r\n  client.connect(host, function() {\r\n    console.log('connected, launching app ...');\r\n\r\n    client.launch(DefaultMediaReceiver, function(err, player) {\r\n      var media = {\r\n\r\n      \t// Here you can plug an URL to any mp4, webm, mp3 or jpg file with the proper contentType.\r\n        contentId: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/big_buck_bunny_1080p.mp4',\r\n        contentType: 'video/mp4',\r\n        streamType: 'BUFFERED', // or LIVE\r\n\r\n        // Title and cover displayed while buffering\r\n        metadata: {\r\n          type: 0,\r\n          metadataType: 0,\r\n          title: \"Big Buck Bunny\", \r\n          images: [\r\n            { url: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/BigBuckBunny.jpg' }\r\n          ]\r\n        }        \r\n      };\r\n\r\n      player.on('status', function(status) {\r\n        console.log('status broadcast playerState=%s', status.playerState);\r\n      });\r\n\r\n      console.log('app \"%s\" launched, loading media %s ...', player.session.displayName, media.contentId);\r\n\r\n      player.load(media, { autoplay: true }, function(err, status) {\r\n        console.log('media loaded playerState=%s', status.playerState);\r\n\r\n        // Seek to 2 minutes after 15 seconds playing.\r\n        setTimeout(function() {\r\n          player.seek(2*60, function(err, status) {\r\n            //\r\n          });\r\n        }, 15000);\r\n\r\n      });\r\n\r\n    });\r\n    \r\n  });\r\n\r\n  client.on('error', function(err) {\r\n    console.log('Error: %s', err.message);\r\n    client.close();\r\n  });\r\n\r\n}\r\n```\r\n\r\nContributors\r\n------------\r\n\r\n* [xat](https://github.com/xat) (Simon Kusterer)\r\n* [angelnu](https://github.com/angelnu) (Angel Nunez Mencias)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/thibauts/node-castv2-client.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.2.0"
}

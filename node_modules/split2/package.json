{
  "_args": [
    [
      {
        "raw": "split2@^0.2.1",
        "scope": null,
        "escapedName": "split2",
        "name": "split2",
        "rawSpec": "^0.2.1",
        "spec": ">=0.2.1 <0.3.0",
        "type": "range"
      },
      "/var/www/pratos/node_modules/slice-file"
    ]
  ],
  "_from": "split2@>=0.2.1 <0.3.0",
  "_id": "split2@0.2.1",
  "_inCache": true,
  "_location": "/split2",
  "_npmUser": {
    "name": "matteo.collina",
    "email": "hello@matteocollina.com"
  },
  "_npmVersion": "1.4.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "split2@^0.2.1",
    "scope": null,
    "escapedName": "split2",
    "name": "split2",
    "rawSpec": "^0.2.1",
    "spec": ">=0.2.1 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/slice-file"
  ],
  "_resolved": "https://registry.npmjs.org/split2/-/split2-0.2.1.tgz",
  "_shasum": "02ddac9adc03ec0bb78c1282ec079ca6e85ae900",
  "_shrinkwrap": null,
  "_spec": "split2@^0.2.1",
  "_where": "/var/www/pratos/node_modules/slice-file",
  "author": {
    "name": "Matteo Collina",
    "email": "hello@matteocollina.com"
  },
  "bugs": {
    "url": "http://github.com/mcollina/split2/issues"
  },
  "dependencies": {
    "through2": "~0.6.1"
  },
  "description": "split a Text Stream into a Line Stream, using Stream 2",
  "devDependencies": {
    "callback-stream": "~1.0.2",
    "pre-commit": "0.0.9",
    "tap": "~0.4.12"
  },
  "directories": {},
  "dist": {
    "shasum": "02ddac9adc03ec0bb78c1282ec079ca6e85ae900",
    "tarball": "https://registry.npmjs.org/split2/-/split2-0.2.1.tgz"
  },
  "homepage": "https://github.com/mcollina/split2#readme",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "matteo.collina",
      "email": "hello@matteocollina.com"
    }
  ],
  "name": "split2",
  "optionalDependencies": {},
  "pre-commit": [
    "test"
  ],
  "readme": "# Split2(matcher, mapper, options)\n\n[![build status](https://secure.travis-ci.org/mcollina/split2.png)](http://travis-ci.org/mcollina/split2)\n\nBreak up a stream and reassemble it so that each line is a chunk.\n`split2` is inspired by [@dominictarr](https://github.com/dominictarr) [`split`](https://github.com/dominictarr) module,\nand it is totally API compatible with it.\nHowever, it is based on [`through2`](https://github.com/rvagg/through2) by [@rvagg](https://github.com/rvagg) and it is fully based on Stream2.\n\n`matcher` may be a `String`, or a `RegExp`. Example, read every line in a file ...\n\n``` js\n  fs.createReadStream(file)\n    .pipe(split2())\n    .on('data', function (line) {\n      //each chunk now is a seperate line!\n    })\n\n```\n\n`split` takes the same arguments as `string.split` except it defaults to '/\\r?\\n/' instead of ',', and the optional `limit` paremeter is ignored.\n[String#split](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split)\n\n`split` takes an optional options object on it's third argument, which\nis directly passed as a\n[Transform](http://nodejs.org/api/stream.html#stream_class_stream_transform_1)\noption.\n\nCalling `.destroy` will make the stream emit `close`. Use this to perform cleanup logic\n\n``` js\nvar splitFile = function(filename) {\n  var file = fs.createReadStream(filename)\n\n  return file\n    .pipe(split2())\n    .on('close', function() {\n      // destroy the file stream in case the split stream was destroyed\n      file.destroy()\n    })\n}\n\nvar stream = splitFile('my-file.txt')\n\nstream.destroy() // will destroy the input file stream\n```\n\n# NDJ - Newline Delimited Json\n\n`split2` accepts a function which transforms each line.\n\n``` js\nfs.createReadStream(file)\n  .pipe(split2(JSON.parse))\n  .on('data', function (obj) {\n    //each chunk now is a a js object\n  })\n```\n\n# License\n\nCopyright (c) 2014, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mcollina/split2.git"
  },
  "scripts": {
    "test": "tap test.js"
  },
  "version": "0.2.1",
  "website": "https://github.com/mcollina/split2"
}

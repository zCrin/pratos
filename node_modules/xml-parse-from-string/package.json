{
  "_args": [
    [
      {
        "raw": "xml-parse-from-string@^1.0.0",
        "scope": null,
        "escapedName": "xml-parse-from-string",
        "name": "xml-parse-from-string",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/var/www/pratos/node_modules/parse-bmfont-xml"
    ]
  ],
  "_from": "xml-parse-from-string@>=1.0.0 <2.0.0",
  "_id": "xml-parse-from-string@1.0.1",
  "_inCache": true,
  "_location": "/xml-parse-from-string",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/xml-parse-from-string-1.0.1.tgz_1495115124388_0.20413493970409036"
  },
  "_npmUser": {
    "name": "mattdesl",
    "email": "dave.des@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xml-parse-from-string@^1.0.0",
    "scope": null,
    "escapedName": "xml-parse-from-string",
    "name": "xml-parse-from-string",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/parse-bmfont-xml"
  ],
  "_resolved": "https://registry.npmjs.org/xml-parse-from-string/-/xml-parse-from-string-1.0.1.tgz",
  "_shasum": "a9029e929d3dbcded169f3c6e28238d95a5d5a28",
  "_shrinkwrap": null,
  "_spec": "xml-parse-from-string@^1.0.0",
  "_where": "/var/www/pratos/node_modules/parse-bmfont-xml",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "bugs": {
    "url": "https://github.com/Jam3/xml-parse-from-string/issues"
  },
  "dependencies": {},
  "description": "DOMParser.parseFromString for XML with IE8 fallback",
  "devDependencies": {
    "brfs": "^1.4.0",
    "browserify": "^9.0.3",
    "faucet": "0.0.1",
    "tape": "^3.5.0",
    "testling": "^1.7.1"
  },
  "directories": {},
  "dist": {
    "shasum": "a9029e929d3dbcded169f3c6e28238d95a5d5a28",
    "tarball": "https://registry.npmjs.org/xml-parse-from-string/-/xml-parse-from-string-1.0.1.tgz"
  },
  "gitHead": "d23f70309e3959cef64803c666e24ba1c451d6c3",
  "homepage": "https://github.com/Jam3/xml-parse-from-string",
  "keywords": [
    "ie8",
    "fallback",
    "dom",
    "parser",
    "DOMParser",
    "xml",
    "string",
    "parse",
    "browser",
    "browserify",
    "webpack",
    "activeXObject"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mattdesl",
      "email": "dave.des@gmail.com"
    }
  ],
  "name": "xml-parse-from-string",
  "optionalDependencies": {},
  "readme": "# xml-parse-from-string\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nA light browser wrapper around `DOMParser.parseFromString` for XML, with fallback for IE8 and other browsers.\n\n- attempts to use DOMParser with `\"application/xml\"`\n- falls back to `ActiveXObject('Microsoft.XMLDOM')`\n- then falls back to `createElement` / `innerHTML`  \n\n```js\nvar parseXML = require('xml-parse-from-string')\n\nvar str = '<root><foobar id=\"blah\"></foobar></root>'\nvar doc = parseXML(str)\nvar tag = doc.getElementsByTagName('foobar')[0]\n\nconsole.log(tag.getAttribute('id')) // -> \"blah\"\n```\n\nBe wary of subtle differences between implementations, such as case-sensitivity in `attribute.nodeName`.\n\nPRs for Node version welcome.\n\n## Usage\n\n[![NPM](https://nodei.co/npm/xml-parse-from-string.png)](https://www.npmjs.com/package/xml-parse-from-string)\n\n#### `root = parse(str)`\n\nParses the string as XML and returns the `root` element as a DOM element, so you can do operations similar to `document.getElementById`, `document.getElementsByTagName`, and so forth.\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/Jam3/xml-parse-from-string/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Jam3/xml-parse-from-string.git"
  },
  "scripts": {
    "test": "browserify test.js -t brfs | testling | faucet"
  },
  "version": "1.0.1"
}

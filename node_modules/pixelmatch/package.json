{
  "_args": [
    [
      {
        "raw": "pixelmatch@^4.0.0",
        "scope": null,
        "escapedName": "pixelmatch",
        "name": "pixelmatch",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "/var/www/pratos/node_modules/jimp"
    ]
  ],
  "_from": "pixelmatch@>=4.0.0 <5.0.0",
  "_id": "pixelmatch@4.0.2",
  "_inCache": true,
  "_location": "/pixelmatch",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/pixelmatch-4.0.2.tgz_1470671343818_0.5421545191202313"
  },
  "_npmUser": {
    "name": "mourner",
    "email": "agafonkin@gmail.com"
  },
  "_npmVersion": "2.15.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pixelmatch@^4.0.0",
    "scope": null,
    "escapedName": "pixelmatch",
    "name": "pixelmatch",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/jimp"
  ],
  "_resolved": "https://registry.npmjs.org/pixelmatch/-/pixelmatch-4.0.2.tgz",
  "_shasum": "8f47dcec5011b477b67db03c243bc1f3085e8854",
  "_shrinkwrap": null,
  "_spec": "pixelmatch@^4.0.0",
  "_where": "/var/www/pratos/node_modules/jimp",
  "author": {
    "name": "Vladimir Agafonkin"
  },
  "bin": {
    "pixelmatch": "bin/pixelmatch"
  },
  "bugs": {
    "url": "https://github.com/mapbox/pixelmatch/issues"
  },
  "dependencies": {
    "pngjs": "^3.0.0"
  },
  "description": "The smallest and fastest pixel-level image comparison library.",
  "devDependencies": {
    "eslint": "^3.2.2",
    "eslint-config-mourner": "^2.0.1",
    "tap": "^6.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "8f47dcec5011b477b67db03c243bc1f3085e8854",
    "tarball": "https://registry.npmjs.org/pixelmatch/-/pixelmatch-4.0.2.tgz"
  },
  "eslintConfig": {
    "extends": "mourner"
  },
  "gitHead": "f655632e01f70eaff4e89709f620cede786da808",
  "homepage": "https://github.com/mapbox/pixelmatch#readme",
  "keywords": [
    "image",
    "comparison",
    "diff"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mourner",
      "email": "agafonkin@gmail.com"
    }
  ],
  "name": "pixelmatch",
  "optionalDependencies": {},
  "readme": "## pixelmatch\n\n[![Build Status](https://travis-ci.org/mapbox/pixelmatch.svg?branch=master)](https://travis-ci.org/mapbox/pixelmatch)\n[![Coverage Status](https://coveralls.io/repos/mapbox/pixelmatch/badge.svg?branch=master&service=github)](https://coveralls.io/github/mapbox/pixelmatch?branch=master)\n[![](https://img.shields.io/badge/simply-awesome-brightgreen.svg)](https://github.com/mourner/projects)\n\nThe smallest, simplest and fastest JavaScript pixel-level image comparison library,\noriginally created to compare screenshots in tests.\n\nFeatures accurate **anti-aliased pixels detection**\nand **perceptual color difference metrics**.\n\nInspired by [Resemble.js](https://github.com/Huddle/Resemble.js)\nand [Blink-diff](https://github.com/yahoo/blink-diff).\nUnlike these libraries, pixelmatch is around **90 lines of code**,\nhas **no dependencies**, and works on **raw arrays** of image data,\nso it's **blazing fast** and can be used in **any environment** (Node or browsers).\n\n```js\nvar numDiffPixels = pixelmatch(img1, img2, diff, 800, 600, {threshold: 0.1});\n```\n\nImplements ideas from the following papers:\n\n- [Measuring perceived color difference using YIQ NTSC transmission color space in mobile applications](http://www.progmat.uaem.mx:8080/artVol2Num2/Articulo3Vol2Num2.pdf) (2010, Yuriy Kotsarenko, Fernando Ramos)\n- [Anti-aliased pixel and intensity slope detector](http://www.ee.ktu.lt/journal/2009/7/25_ISSN_1392-1215_Anti-aliased%20Pxel%20and%20Intensity%20Slope%20Detector.pdf) (2009, Vytautas Vyšniauskas)\n\n### Example output\n\n| expected | actual | diff |\n| --- | --- | --- |\n| ![](test/fixtures/4a.png) | ![](test/fixtures/4b.png) | ![1diff](test/fixtures/4diff.png) |\n| ![](test/fixtures/3a.png) | ![](test/fixtures/3b.png) | ![1diff](test/fixtures/3diff.png) |\n| ![](test/fixtures/1a.png) | ![](test/fixtures/1b.png) | ![1diff](test/fixtures/1diff.png) |\n\n### API\n\n#### pixelmatch(img1, img2, output, width, height[, options])\n\n- `img1`, `img2` — Image data of the images to compare (`Buffer` or `Uint8Array`).\n- `output` — Image data to write the diff to, or `null` if don't need a diff image.\n- `width`, `height` — Width and height of the images. Note that _all three images_ need to have the same dimensions.\n\n`options` is an object literal with the following properties:\n\n- `threshold` — Matching threshold, ranges from `0` to `1`. Smaller values make the comparison more sensitive. `0.1` by default.\n- `includeAA` — If `true`, disables detecting and ignoring anti-aliased pixels. `false` by default.\n\nCompares two images, writes the output diff and returns the number of mismatched pixels.\n\n### Command line\n\nPixelmatch comes with a binary that works with PNG images:\n\n```bash\npixelmatch image1.png image2.png output.png 0.1\n```\n\n### Example usage\n\n#### Node.js\n\n```js\nvar fs = require('fs'),\n    PNG = require('pngjs').PNG,\n    pixelmatch = require('pixelmatch');\n\nvar img1 = fs.createReadStream('img1.png').pipe(new PNG()).on('parsed', doneReading),\n    img2 = fs.createReadStream('img2.png').pipe(new PNG()).on('parsed', doneReading),\n    filesRead = 0;\n\nfunction doneReading() {\n    if (++filesRead < 2) return;\n    var diff = new PNG({width: img1.width, height: img1.height});\n\n    pixelmatch(img1.data, img2.data, diff.data, img1.width, img1.height, {threshold: 0.1});\n\n    diff.pack().pipe(fs.createWriteStream('diff.png'));\n}\n```\n\n#### Browsers\n\n```js\nvar img1 = img1Ctx.getImageData(0, 0, width, height),\n    img2 = img2Ctx.getImageData(0, 0, width, height),\n    diff = diffCtx.createImageData(width, height);\n\npixelmatch(img1.data, img2.data, diff.data, width, height, {threshold: 0.1});\n\ndiffCtx.putImageData(diff, 0, 0);\n```\n\n### Install\n\nInstall with NPM:\n\n```bash\nnpm install pixelmatch\n```\n\nTo build a browser-compatible version, clone the repository locally, then run:\n\n```bash\nnpm install -g browserify\nbrowserify -s pixelmatch index.js > pixelmatch.js\n```\n\n### [Changelog](https://github.com/mapbox/pixelmatch/releases)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mapbox/pixelmatch.git"
  },
  "scripts": {
    "pretest": "eslint index.js bin/pixelmatch test/test.js",
    "test": "tap test/test.js"
  },
  "version": "4.0.2"
}

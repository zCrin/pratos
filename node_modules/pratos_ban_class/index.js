const path = __dirname.replace('/node_modules/pratos_ban_class', '');
var fs = require('fs');
module.exports = {

	is_banned: function(globalVariable, ip, callback){
		globalVariable.event.emit("user", "verify_banned");

		fs.readFile(path + "/conf/auto_ip_ban.json", 'utf8', function(err, data){
			var ban = JSON.parse(data);
			if(ban.banned_ip[ip]){
				globalVariable.event.emit("user", "verify_banned:banned");
				return callback(true);
			}
			else{
				globalVariable.event.emit("user", "verify_banned:not_banned");
				return callback(false);
			}
		});
	},
	more_banning:function(globalVariable, ip){
		var user_agent = globalVariable.request.headers["user-agent"];
		fs.readFile(path + "/conf/auto_ip_ban.json", 'utf8', function(err, data){
			var ban = JSON.parse(data);
			ban.banning_ip[ip] = (ban.banning_ip[ip])? ban.banning_ip[ip] + 1 : 1;
			if(ban.banning_ip[ip] >= 5){
				globalVariable.event.emit("user", "ban_file:banned");
				ban_user(ban, user_agent,ip);
			}
			else{
				globalVariable.event.emit("user", "ban_file:increasing");
				addToFile(ban);
			}
		});
	},
	stop_banning:function(globalVariable, ip){
		fs.readFile(path + "/conf/auto_ip_ban.json", 'utf8', function(err, data){
		var ban = JSON.parse(data);
		ban.banning_ip[ip] = 0;
		globalVariable.event.emit("user", "ban_file:stop_banning");
		return addToFile(ban);
	});
	},
	ban_user : function(user_agent,ip,callback){
		fs.readFile( path + "/conf/auto_ip_ban.json", 'utf8', function(err, data){
			ban_user(JSON.parse(data), user_agent,ip,callback);
		});
				},
	unban_user : function(ip,callback){
		fs.readFile(path + "/conf/auto_ip_ban.json", 'utf8', function(err, data){
			var file = JSON.parse(data);

			delete file.banned_ip[ip];

			addToFile(file,callback);
		});
	}
};

function ban_user(ban_file, user_agent,ip,callback){
	ban_file.banning_ip[ip] = 0;
	ban_file.banned_ip[ip] = user_agent;
	if(callback){
		return addToFile(ban_file,callback);
	}
	
	return addToFile(ban_file);
}
function addToFile(ban_file,callback){
	fs.writeFile(path + "/conf/auto_ip_ban.json", JSON.stringify(ban_file));
	if(callback){
		return callback(true);
	}
	
	return true;
}

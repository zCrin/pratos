const path = __dirname.replace('/node_modules/pratos_my_accessories_plugin', '');
var fs = require('fs');
const http = require('http');
var Cookies = require("cookies");
var doorState = '1';
var arrayState = ["closed", "open"];
var cmd = require('node-cmd');
var colors = require('colors');

var SerialPort = require('serialport');
var port = new SerialPort('/dev/ttyACM0', {
		baudRate: 9600
	});

module.exports = {
	config: function () {
		var conf = Object();
		conf.GET = true;

		return conf;
	},
	get: function (app, globalVariable) {
		globalVariableIn = globalVariable;
		app.get('/pratos_door_state', function (req, res) {

			doorState = globalVariable[req.user_id].request.query['state'];

			if (doorState == 'u') {
				console.log("\nMy Accessories : door opened".magenta)
				http.get('http://192.168.0.6:51828/?accessoryId=sensor3&state=false', (resp) => {}).on('error', function (err) {
					console.log("Homebridge not started : L30 my_accessories");
				});
				delete globalVariable[req.user_id];
				res.end('done');
			} else if (doorState == 'o') {
				console.log("\nMy Accessories : door closed".magenta)
				http.get('http://192.168.0.6:51828/?accessoryId=sensor3&state=true', (resp) => {}).on('error', function (err) {
					console.log("Homebridge not started : L37 my_accessories");
				});
				res.end('done');
				delete globalVariable[req.user_id];

			}

		});
		setInterval(function () {
			cmd.get('/opt/vc/bin/vcgencmd measure_temp', function (err, sdout) {
				http.get('http://192.168.0.6:51828/?accessoryId=sensor1&value=' + err.replace('temp=', '').replace("'C", ''), (resp) => {}).on('error', function (err) {
					console.log("Homebridge not started : L47 my_accessories");
				});
			});
		}, 300000);

		var statep = '0';
		app.all('/pratos_projecteurOn', function (req, res) {
			if (statep != '1') {
				http.get('http://192.168.0.22/code?val=FF15EA&prot=NEC&repeat=1&pin=4').on('error', function (err) {
					console.log("Problem while turning on the projector");
				});
			}
			res.end('1');
			statep = '1';
			delete globalVariable[req.user_id];
		});
		app.all('/pratos_projecteurOff', function (req, res) {
			if (statep != '0') {
				http.get('http://192.168.0.22/code?val=FF15EA&prot=NEC&repeat=4&pin=4').on('error', function (err) {
					console.log("Problem while turning off the projector");
				});
			}
			res.end('0');
			statep = '0';

			delete globalVariable[req.user_id];
		});
		app.all('/pratos_fanOff', function (req, res) {
			
				cmd.get('sudo gpio mode 7 in',function(res,err){
console.log(res);
console.log(err);
});
			
			res.end('0');
			

			delete globalVariable[req.user_id];
		});
app.all('/pratos_fanOn', function (req, res) {
			
				cmd.get('sudo gpio mode 7 out',function(res,err){
console.log(res);
console.log(err);
});
			
			res.end('1');
			

			delete globalVariable[req.user_id];
		});
		app.all('/pratos_bureauOn', function (req, res) {

			http.get('http://192.168.0.32/turnOn').on('error', function (err) {
				console.log("Problem while turning on the lamp");
			});

			res.end('true');
			delete globalVariable[req.user_id];
		});
		app.all('/pratos_bureauOff', function (req, res) {

			http.get('http://192.168.0.32/turnOff').on('error', function (err) {
				console.log("Problem while turning off the lamp");
			});

			res.end('false');

			delete globalVariable[req.user_id];
		});

	}
};
var test = "";
port.on('data', function (data) {

	textChunk = data.toString('utf8').trim();

	if (textChunk.length > 0) {
		if (textChunk[textChunk.length - 1] == '+') {

			analyseQuerySerial(test + textChunk);
			test = '';
		} else {
			test += textChunk;
		}
	} else {
		analyseQuerySerial(test);
		test = '';
	}
});
var arrayTrueFalse = ['false', 'true'];
setTimeout(initAcce, 10000);
function initAcce() {
	http.get('http://192.168.0.6:51828/?accessoryId=sensor2&state=false').on('error', function (err) {
		console.log("Homebridge not started : L100 my_accessories");
	});
	http.get('http://192.168.0.32/stateLamp', function (resp) {
		http.get('http://192.168.0.6:51828/?accessoryId=light1&state=' + arrayTrueFalse[resp]).on('error', function (err) {
			console.log("Homebridge not started : L138 my_accessories");
		});

	}).on('error', function (err) {
		console.log("Problem while getting state to set homebridge lamp");
	});
}
function analyseQuerySerial(data) {
	console.log(data)
	var regexToThree = /sound_detected/;
	var regexToSU = /sound_undetected/;
	var regexTo = /motion_undetected/;
	if (regexTo.test(data)) {

		var y = data.split("-");
		y = parseFloat(y[1].replace('+'));

		if (y >= 3000) {
			http.get('http://192.168.0.6:51828/?accessoryId=sensor2&state=true', (resp) => {}).on('error', function (err) {
				console.log("Homebridge not started : L100 my_accessories");

			});
			setTimeout(function () {
				http.get('http://192.168.0.6:51828/?accessoryId=sensor2&state=false', (resp) => {}).on('error', function (err) {
					console.log("Homebridge not started : L100 my_accessories");
				});
			}, 20000);
		}
	} else if (regexToThree.test(data)) {

		http.get('http://192.168.0.6:51828/?accessoryId=son1&state=true', (resp) => {}).on('error', function (err) {
			console.log("Homebridge not started : L73 my_accessories");

		});
	} else if (regexToSU.test(data)) {

		setTimeout(function () {
			http.get('http://192.168.0.6:51828/?accessoryId=son1&state=false', (resp) => {}).on('error', function (err) {
				console.log("Homebridge not started : L78 my_accessories");

			});
		}, 1000);
	}
}
var d = new Date();
var n = d.getHours();
if (n > 8 && n < 21) {}

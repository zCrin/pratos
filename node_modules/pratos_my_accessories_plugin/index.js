const path = __dirname.replace('/node_modules/pratos_my_accessories_plugin', '');
var fs = require('fs');
const http = require('http');
var Cookies = require("cookies");
var doorState = '1';
var arrayState =["closed","open"];
var cmd=require('node-cmd');


var SerialPort = require('serialport');
var port = new SerialPort('/dev/ttyACM0', {
  baudRate: 9600
});


module.exports = {
	config:function(){
		var conf = Object();
		conf.GET = true;
		
		return conf;
	},
	get:function(app, globalVariable){
		globalVariableIn = globalVariable;
		app.get('/pratos_door_state', function(req, res) {
doorState = globalVariable[req.user_id].request.query['state'];
res.end('done');
if(doorState == 1){
http.get('http://192.168.0.6:3004');
}
delete globalVariable[req.user_id];
});
app.get('/pratos_temperature', function(req, res) {
cmd.get('/opt/vc/bin/vcgencmd measure_temp',function(err,sdout){
console.log(err);

res.end('{ "temperature": '+err.replace('temp=','').replace("'C",'')+'}');
});
delete globalVariable[req.user_id];
});
app.all('/homebridgeDoorState', function(req, res) {
//console.log(globalVariable[req.user_id].request.query['state']);
res.end(doorState);

delete globalVariable[req.user_id];
});
var statep='0';
app.all('/pratos_projecteurOn', function(req, res) {
http.get('http://192.168.0.22/code?val=FF15EA&prot=NEC&repeat=1&pin=4');
res.end('1');
statep='1';
delete globalVariable[req.user_id];
});
app.all('/pratos_projecteurOff', function(req, res) {
http.get('http://192.168.0.22/code?val=FF15EA&prot=NEC&repeat=4&pin=4');
res.end('0');
statep='0';

delete globalVariable[req.user_id];
});
app.all('/pratos_projecteurState', function(req, res) {
res.end(statep);
delete globalVariable[req.user_id];
});
}
};
var test = "";
port.on('data',function(data){


   
        textChunk =  data.toString('utf8').trim();
      
if(textChunk.length > 0){
if(textChunk[textChunk.length - 1]== '+'){

analyseQuerySerial(test + textChunk);
test= '';
}
else{
test += textChunk;
}
}
else{
analyseQuerySerial(test);
test= '';
}
});


function analyseQuerySerial(data){
//console.log(data);
var regexTo = /motion_undetected/;
if(regexTo.test(data)){
var y = data.split("-");
y = parseFloat(y[1].replace('+'));

if(y >= 3000){
http.get('http://192.168.0.6:3007',(resp)=>{}).on('error',function(err){console.log(err);});

}
}

switch(data){


case '+sound_detected+' :
//console.log('Un son a \351t\351 d\351tect\351');
break; 
case '+sound_undetected+' :
//console.log('Le son est fini');
break;


}
}
var d = new Date();
var n = d.getHours();
if(n > 8 && n < 21){

}
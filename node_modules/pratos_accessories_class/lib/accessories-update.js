/*
* License MIT
* « Copyright © 2018, Pratos »
* v 1.3.0
* !!! In this update Homebridge accessories are no longer designated by their AID but by their name. Changing accessory name in Homebridge config.json might lose your datas.
*/
const path = __dirname.replace('/node_modules/pratos_accessories_class/lib', '');
var fs = require('fs');
module.exports= update_accessories;

function update_accessories(user_id,globalVariable, callback){
		if(globalVariable[user_id].request.bodyPratos. oldName){
			var oldName = globalVariable[user_id].request.bodyPratos.oldName;
			globalVariable.event.emit("accessories", "editing:starting");
				globalVariable.database.mongoDB.collection("accessories_updated").findOne({'id': 'accessories'},function(err, updated_accessories){
				delete updated_accessories.id;
				if(!updated_accessories.accessories[oldName]){
					updated_accessories.accessories[oldName] = new Object();
				}
				if(globalVariable[user_id].request.bodyPratos.name){
					updated_accessories.accessories[oldName].name = globalVariable[user_id].request.bodyPratos.name;
				}
if(globalVariable[user_id].request.bodyPratos.room){
					updated_accessories.accessories[oldName].room = globalVariable[user_id].request.bodyPratos.room;
				}
				if(globalVariable[user_id].request.bodyPratos.manufacturer){
					updated_accessories.accessories[oldName].manufacturer = globalVariable[user_id].request.bodyPratos.manufacturer;
				}
				if(globalVariable[user_id].request.bodyPratos.model){
					updated_accessories.accessories[oldName].model = globalVariable[user_id].request.bodyPratos.model;
				}
				if(globalVariable[user_id].request.bodyPratos.icon_on){
					updated_accessories.accessories[oldName].icon_on = globalVariable[user_id].request.bodyPratos.icon_on;
				}
				if(globalVariable[user_id].request.bodyPratos.icon_off){
					updated_accessories.accessories[oldName].icon_off = globalVariable[user_id].request.bodyPratos.icon_off;
				}
updated_accessories.id ='accessories';
	globalVariable.database.mongoDB.collection("accessories_updated").update({ id:"accessories"}, 
updated_accessories,{upsert:true});

				fs.writeFile(path + "/conf/auto_updated_accessories.json", JSON.stringify(updated_accessories));
				globalVariable.event.emit("accessories", "editing:successed");
				return callback("editing:successed");
				 
			});
		}
		else{
			globalVariable.event.emit("accessories", "editing:failed");
			return callback("editing:failed");
		}
	}
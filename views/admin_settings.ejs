
<!DOCTYPE html>
<html>
	<head>
		<% include includes/head-content.include.ejs %>
		<%	include includes/icons.include.ejs %>
		<%	include includes/css.include.ejs %>

		<script src="/js/jquery-1.11.3.min.js"></script>
		<script src="/js/stay_standalone.js"></script>
		<link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css"/>
		<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
		<link rel="stylesheet" type="text/css"href="/css/bootstrap-colorpicker.min.css">

		<script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	</head>
	<body>

		<% include includes/header.include.ejs %>
		<%- include("includes/navbar.include.ejs", {nav : nav})%>
		<div  id='settings_page'  class='page page-nav'>
<h2>Réglages</h2>

<div id='settings_main_menu'>


<% 
		var settingsN = Object.keys(settings);
	var settingsL = settingsN.length;
for(var i = 0; i < settingsL; i++){ %>
	<%- "<div id='"+ settings [settingsN[i]]. buttonName +"'data-ripple='rgba(0,0,0, 0.3)' class='material-shadow-2 material-design-normal-button settings_menu_button'>"+ settings [settingsN[i]]. buttonIcon +"<span>"+ settings [settingsN[i]].title+"</span></div> "%>
	<%	}
	%>
</div>



<%
for(var i = 0; i < settingsL; i++){ %>
	<%- "<div class='settings_page settings_pagebox settings_menu' id='"+ settings [settingsN[i]].buttonName.replace("Button","Box")+"'>"+ settings [settingsN[i]].boxContent +"</div> "%>
	<%	}
	%>
		<div id='rebootpopup' class='popup'>
			<h2>Redémarrer</h2>
			<p>Pour appliquer les modifications, Pratos doit redémarrer. Voulez-vous redémarrer maintenant ?</p>
					<button onClick='reboot(true)'  id='validate_ban'>Oui</button>
					<button onClick='reboot(false)' id='validate_ban'>Non</button>
		</div>
		</div>

	</body>

	
	<script src='/js/navbar_auto.js'></script>
		<script src="/js/bootstrap-colorpicker.min.js"></script>
 <script src="/socket.io/socket.io.js"></script>
<script src='/js/snackbar.min.js'></script>
<script>var message = '<%- error %>';</script>
	<script src="/js/common.js"></script>
<script src="/js/settingsManager.js"></script>
<script>
var nbLoaded = 0;
var workspacePlayground;
var conditionsEditingName;
var modifyBlocks;
var plugins = new Settings({
        target: "#settings_main_menu",
        title: "<i class='fa fa-plug'></i><span>Plugins</span>",
        boxName: "Plugins",
        content: '',
        onOpened: function (id) {
            var switchPlugin = new Settings({
                    target: "#" + id + "_settingsPage",
                    title: "<i class='fa fa-eye-slash'></i><span>Gérer</span>",
                    boxName: "Gérer",

                    content: "",
                    onOpened: function (id) {
                        loadJS('/js/pluginsManager.js', function () {
                            turnPluginStart(id);
                        }, document.body);
                    }
                }).load();
            var deletePlugin = new Settings({
                    target: "#" + id + "_settingsPage",
                    title: "<i class='fa fa-trash'></i><span>Supprimer</span>",
                    boxName: "Supprimer",

                    content: "",
                    onOpened: function (id) {
                        loadJS('/js/pluginsManager.js', function () {
                            deletePluginStart(id);
                        }, document.body);
                    }

                }).load();
        }
    }).load();

var style = new Settings({
        target: "#settings_main_menu",
        title: "<i class='fa fa-pencil'></i><span>Style</span>",
        boxName: "Style",

        content: "<div id='stylePage'  class='material-shadow-2'><div id='flexStyle'><div><div class='stylePaheH3'>Couleur primaire</div><div id='cp8_container'></div></div><div><div class='stylePaheH3'>Couleur de l’arrière-plan</div><div id='cp9_container'></div></div></div><div id='changeStyleButtonBar'> <button class='material-design-normal-button' id='resetNewColors'>Original</button><button class='material-design-normal-button' id='saveNewColors'>Sauvegarder</button></div></div>",
        onOpened: function (id) {
            loadJS('/js/styleManager.js', function () {
                startSytleManager();
            }, document.body);
        }
    }).load();
var recipes = new Settings({
        target: "#settings_main_menu",
        title: "<i class='fa fa-codepen'></i><span>Recettes</span>",
        boxName: "Recettes",
        toHide: "#settings_main_menu",
        content: "<div id='buttonsTopRecipe'><button class='material-design-normal-button'  id='createRecipe'>Créer une recette</button><button class='material-design-normal-button' id='modifyOldRecipe'>Modifier une recette</button></div><div id='conditionsButtons'><div id='saveConditionsNameInputBox'><div class='input-div-box input-name-recipe'><input type='text' placeholder='Nom de la recette' id='saveConditionsName' spellcheck='false' /></div></div><button class='material-design-normal-button' id='registerConditions' onclick='saveRecipe()'>Sauvegarder</button></div><div id='blocklyDiv' class='material-shadow-1' ></div><div id='listOldrecipesBlock'></div><div id='genratorBlockly' class='material-shadow-1'></div><span class='material-design-normal-button'  id='showConditionCode'>Voir le code <i class='fa fa-caret-down' aria-hidden='true'></i></span><div id='deleteConditions'><button onclick='deleteRecipe()' id='deleteConditionsButt' class='material-design-normal-button'>Supprimer</button></div>",
        onOpened: function (id) {
            loadJS('/js/recipesManager.js', function () {
                startRecipe();
                inputbottombar();
                new MaterialPlaceholder({
                    text: "Nom de la recette",
                    target: "#saveConditionsName"
                }).load();
            }, document.body);
        }
    }).load();
 <%  if(client.isAdmin){ %>
   
						
						
var users = new Settings({
        target: "#settings_main_menu",
        title: "<i class='fa fa-user'></i><span>Utilisateurs</span>",
        boxName: "Utilisateurs",

        content: '	<div data-ripple="rgba(0,0,0, 0.3)" id="addUserButton"class="material-button material-shadow-3 "><i class="fa fa-plus" aria-hidden="true"></i></div>',
        onOpened: function(id){loadJS('/js/usersManager.js', function () {
                            startUserManager(id);
                        }, document.body);
						}
						
						
					
    }).load();
	
<%}%>
var disconnect = new Settings({
        target: "#settings_main_menu",
        title: "<i class='fa fa-sign-out' aria-hidden='true'></i><span>Se déconnecter</span>",
        boxName: "",
        classAttr: "disconnectButton",
        ask: true,
        content: "",
        onClick: function () {
            window.location = "/disconnect"
        }
    }).load();
var loadJS = function (url, implementationCode, location) {

    var scriptTag = document.createElement('script');
    scriptTag.src = url;

    scriptTag.onload = implementationCode;
    scriptTag.onreadystatechange = implementationCode;

    location.appendChild(scriptTag);
};
jQuery.cachedScript = function (url, options) {
    options = $.extend(options || {}, {
            dataType: "script",
            cache: true,
            url: url
        });
    return jQuery.ajax(options);
};

function is_same(objOne, objTwo) {
    var objOneKeys = Object.keys(objOne),
    objOneLength = objOneKeys.length,
    objTwoKeys = Object.keys(objTwo),
    objTwoLength = objTwoKeys.length;

    if (objOneLength == objTwoLength) {
        for (var i = 0; i < objOneLength; i++) {

            if (objOne[objOneKeys[i]] != objTwo[objTwoKeys[i]]) {
                return false;
            } else if (objOne[objOneKeys[i]] == objTwo[objTwoKeys[i]] && i == (objOneLength - 1)) {
                return true;
            }
        }

    } else {

        return false;
    }
}
function put_in_object(objOne) {
    var objOneKeys = Object.keys(objOne),
    objOneLength = objOneKeys.length;
    var n = Object();
    for (var i = 0; i < objOneLength; i++) {
        n[objOneKeys[i]] = objOne[objOneKeys[i]];
    }

    return n;
}
function reboot(t) {

    $.get('/reboot/', function (data) {
        if (data == 'rebooting') {
            var popup = new MaterialPopup({
                    name: "Système",
                    content: "<p>Pratos is rebooting, please wait</p>"
                }).load()

                setTimeout(function () {
                    location.reload()
                }, 5000);
        } else {
            alert('Erreur');
        }
    });

}



</script>
<style>
</style>
		<% 
var contentNames = Object.keys(content);
var contentL = contentNames.length;

		var loaded ={};
		for(var u = 0; u < contentL; u++){ 
var y = new RegExp(content[contentNames[u]].page,'g');
			if(y.test(page_name) && !loaded[content[contentNames[u]].script]){
loaded[content[contentNames[u]].script] == 1;%>
	<%- content[contentNames[u]].script %>
	<%	}}
	%>
</html>
